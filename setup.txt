npm create  vite@latest prject_name

-- 메시지 출력 및 응답 선택
> npx 
> create-vite prject_name

✔ Select a framework: › React
✔ Select a variant: › TypeScript + SWC

cd prject_name

npm i chance luxon @fontsource/material-icons

npm i -D postcss autoprefixer tailwindcss @tailwindcss/line-clamp daisyui

npm i -D eslint prettier eslint-plugin-react eslint-config-prettier eslint-plugin-prettier @typescript-eslint/eslint-plugin @typescript-eslint/parser

npm i redux @reduxjs/toolkit react-redux

npm i redux-logger
npm i -D @types/redux-logger

npm i redux-thunk
npm i -D @types/redux-thunk

-------------------------------
//npm i --legacy-peer-deps react-beautiful-dnd
npm i react-dnd react-dnd-html5-backend
npm i -D @types/react-dnd
npm i @hello-pangea/dnd
npm i -D @types/react-beautiful-dnd

npm i react-router-dom
npm i -D @types/react-router-dom

#-------------------
# 개발시 사용 명령어
# npm run dev

#-- 개발시 소스 변경 부분 --------------------------------

#----------------------------
# 1. vite.config.ts 파일 수정: 
#   -- 빌드시 Prod 환경부분 사용
#----------------------------
//-- Dev 환경
// export default defineConfig({
//   plugins: [react()],
//   server: {
//     proxy: {
//       '/api/v1/': {
//         target: 'http://localhost:4000', // 백엔드 서버 주소
//         changeOrigin: true,
//         rewrite: (path) => path.replace(/^\/api\/v1/, '') // 필요한 경우 경로 재작성
//       }
//     }
//   }
// })

//-- Prod 환경
export default defineConfig({
  plugins: [react()],
})

#----------------------------
# 2. 서버 주소 변경
#----------------------------
# src/services/getServerUrl.ts 파일 수정
#  -- 배포시 사용 부분 사용
# --------------------------
export const getServerUrl = (path: string) => {
    // 개발시 사용 (npm run dev 시 사용)
    //const host = 'http://localhost:5173/api/v1'
    // 배포시 사용 (npm run build 시 사용)
    const host = 'http://127.0.0.1:4000'
    const url = [host, path].join('')
    console.log('server url = ', url)
    return url
}

#-------------------
# 프로젝트 빌드 명령어
# npm run build

#----------------------------
# 빌드 결과 서버 쪽으로 복사
# -- 현재 프로젝트 디렉토리에서 실행
# 빌드된 결과는 ./dist 디렉토리에 생성됨
# 이 ./dist 디렉토리를 서버 쪽에 ./public 디렉토리에 복사
# 서버 쪽에서 이 ./public 디렉토리를 사용하여 프론트엔드 서버를 실행
#----------------------------
# cp -r ./dist/* /server/public/
#-----------------------------------
